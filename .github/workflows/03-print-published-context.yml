name: Publish release event demo
run-name: 03-${{ github.actor }} publish release version on ${{github.ref}}

on: 
  release:
    types: [published]

jobs:
  Test-Version:
    runs-on: ubuntu-latest
    steps:
      - run: |
          NEXUS_UPLOAD_REPOS_URL="http://test-nexus"
          checkVersion="${{github.ref_name}}"
          checkVersion=${checkVersion,,}
          prereleaseFlag="${{github.event.release.prerelease}}"
          releaseMatched="false"

          # Release version rule: prerelease=false and not contains 'snapshot'(ignore case) and match {v}x.x.x{-yyyy}
          if [[ $prereleaseFlag == "false" && "$checkVersion" != *"snapshot"* && "$checkVersion" =~ ^v?[0-9]+(\.[0-9]+){0,2}(-[a-zA-Z]+[0-9]*)?$ ]]; then
            releaseMatched="true"
          fi
          
          # Publish by gradle
          if [[ $releaseMatched == "true" ]]; then
            echo "Release version will be deploy to external <$NEXUS_UPLOAD_REPOS_URL> using $NEXUS_UPLOAD_REPOS_USER"; 

          else
            echo "Snapshot version will be deploy to inner <$NEXUS_UPLOAD_REPOS_URL> using $NEXUS_UPLOAD_REPOS_USER"; 
          fi     

  Check-Release:
    runs-on: ubuntu-latest
    steps:
      - name: Checking version ${{github.ref_name}} if matching
        id: match-rel-version
        run: |
          check="${{ github.ref_name }}"
          check=${check,,}
          match="false"
          if [[ $check != *"snapshot"* $check =~ ^v?[0-9]+(\.[0-9]+){0,2}(-[a-zA-Z]+[0-9]*)?$ ]]; then
              match="true"
          fi
          echo "match=$match">>GITHUB_OUTPUT
        # uses: actions-ecosystem/action-regex-match@v2
        # with:
        #   text: ${{ github.ref_name }}
        #   regex: '^v?[0-9]+(\.[0-9]+){0,2}(-[a-zA-Z]+[0-9]*)?$' 

      - name: Deploy Release version ${{github.ref_name}}
        if: ${{ github.event.release.prerelease != 'true' && steps.match-rel-version.outputs.match == 'true' }}
        run: echo "--->Release..."
      - name: Deploy Snapshot version ${{github.ref_name}}
        if: ${{ !(github.event.release.prerelease != 'true' && steps.match-rel-version.outputs.match == 'true') }}
        run: echo "#### Snapshot..."

  check_if_release_version:
    name: Check if release with version ${{github.ref_name}} and prelease flag ${{github.event.release.prerelease}}
    runs-on: ubuntu-latest
    outputs:
      matched: ${{ steps.check-rel-flag.outputs.matched }}   
    steps:
      - id: check-rel-flag
        name: Check Release flag
        run: |
          check="${{github.ref_name}}"
          check=${check,,}
          if [[ ${{github.event.release.prerelease}} == "false" && "$check" != *"snapshot"* && "$check" =~ ^v?[0-9]+(\.[0-9]+){0,2}(-[a-zA-Z]+[0-9]*)?$ ]]; then
            echo "matched=true" >> $GITHUB_OUTPUT
            echo "# Release :rocket: $check" >> $GITHUB_STEP_SUMMARY

          else
            echo "matched=false" >> $GITHUB_OUTPUT 
            echo "# Snapshot :clock: $check" >> $GITHUB_STEP_SUMMARY
          fi
          cat $GITHUB_OUTPUT

  deploy_to_external_repository:
    name: 🎉Release version will be deployed to external repository🚀
    runs-on: ubuntu-latest
    needs: check_if_release_version
    if: ${{ needs.check_if_release_version.outputs.matched == 'true' }}
    steps:
        - run: echo "## Publish to external with version with release version" >> $GITHUB_STEP_SUMMARY

  deploy_to_internal_repository:
    runs-on: ubuntu-latest
    needs: check_if_release_version
    name: 🎬Snapshot version will be deployed to internal repository⏰
    if: ${{ needs.check_if_release_version.outputs.matched == 'false' }}
    steps:
        - run: echo "## Publish to internal with snapshot version" >> $GITHUB_STEP_SUMMARY
      
     
